x = cbind(cmort, tempr, part)
rm(list = ls())
library(vars)
library(astsa)
x = cbind(cmort, tempr, part)
summary(VAR(x, p = 1, type = 'both'))
summary(VAR(x, p = 2, type = 'both'))
out <- summary(VAR(x, p = 2, type = 'both'))
out$covres
out$names
out$varresult
out$varresult$cmort
VARselect(x, lag.max=10, type = "both")
acf(resid(fit, 52))
summary(fit <- VAR(x, p = 2, type = 'both')) #BIC selected Model
acf(resid(fit, 52))
serial.test(fit, lags.pt=12, tyype = "PT.adjusted")
serial.test(fit, lags.pt=12, type = "PT.adjusted")
library(quantmod)
rm(list = ls())
library(quantmod)
getSymbols('CPIAUCNS',src='FRED')
View(CPIAUCNS)
rm(list = ls())
library(quantmod)
getSymbols('HOUST',src='FRED')
getSymbols('HOUST',src='FRED')
rm(list = ls())
rm(list = ls())library(quantmod)
rm(list = ls())
library(quantmod)
getSymbols('HOUST',src='FRED')
ggplot(HOUST, aes(x = Index, y = value)) + geom_point()
theme_set(size = 18)
library(ggplot2)
theme_set(size = 18)
rm(list = ls())
library(quantmod)
library(ggplot2)
theme_set(theme_bw(base_size = 18))
getSymbols('HOUST',src='FRED')
ggplot(HOUST, aes(x = Index, y = value)) + geom_point()
ggplot(HOUST, aes(x = index, y = value)) + geom_point()
ggplot(HOUST, aes(x = updated, y = Data)) + geom_point()
houst <- getSymbols('HOUST',src='FRED')
rm(list = ls())
library(quantmod)
library(ggplot2)
theme_set(theme_bw(base_size = 18))
houst <- getSymbols('HOUST',src='FRED')
houst
houst <- as.data.frame(HOUST)
getSymbols('HOUST',src='FRED')
houst <- as.data.frame(HOUST)
View(houst)
View(HOUST)
head(HOUST)
houst <- data.frame(date = rownames(HOUST), houst = HOUST)
rownames(HOUST)
rownames(HOUST)
as.Date(rownames(HOUST))
rownames(HOUST)
?getSymbols
index(HOUST)
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
ggplot(HOUST, aes(x = date, y = houst)) + geom_point()
ggplot(HOUST, aes(x = date, y = HOUST)) + geom_point()
ggplot(houst, aes(x = date, y = HOUST)) + geom_point()
ggplot(houst, aes(x = date, y = HOUST)) + geom_line()
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue")
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue") + + xlab("")
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue") +  xlab("")
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue") +  xlab("")
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 2) +  xlab("") +
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 2) +  xlab("") + geom_smooth
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 2) +  xlab("") + geom_smooth
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 2) +  xlab("")
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 1.5) +  xlab("")
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 1.25) +  xlab("")
windows.options(antialias = "cleartype")
rm(list = ls())
library(quantmod)
library(ggplot2)
theme_set(theme_bw(base_size = 18))
getSymbols('HOUST', src='FRED')
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
ggplot(houst, aes(x = date, y = HOUST)) +
geom_line(colour = "blue", size = 1.25) +  xlab("")
options(device = Cairo::CairoWin)
getSymbols(c('HOUST', 'COMPUTSA'), src='FRED')
houscomp <- data.frame(date = as.Date(index(COMPUTSA)), houst = COMPUTSA)
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
housing_data <- merge(houst, houscomp, by = "date")
housing_data
ggplot(housing_data, aes(x = date, y = data)) +
geom_line(colour = "blue", size = 1.25) +  xlab("")
library(reshape2)
theme_set(theme_bw(base_size = 18))
getSymbols(c('HOUST', 'COMPUTSA'), src='FRED')
houscomp <- data.frame(date = as.Date(index(COMPUTSA)), houst = COMPUTSA)
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
data_long <- melt(housing_data, id.vars = "date")
ggplot(data_long, aes(x = date, y = variable)) +
geom_line(colour = "blue", size = 1.25) +  xlab("")
View(housing_data)
ggplot(data_long, aes(x = date, y = value)) +
geom_line(colour = "blue", size = 1.25) +  xlab("")
ggplot(data_long, aes(x = date, y = value)) +
geom_line(size = 1.25) +  xlab("")
View(data_long)
View(housing_data)
matplot(housing_data[, -1])
matplot(housing_data[, -1], type = "l")
ggplot(data_long, aes(x = date, y = value)) +
geom_line(size = 1.25) +  xlab("")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("") + ylab("Units in thousands")
library(VAR)
library(vars)
X <- housing_data[, -1]
X <- matrix(housing_data[, -1])
model <- VAR(X)
X <- as.matrix(housing_data[, -1])
model <- VAR(X)
Bcoef(model)
model <- VAR(y = X, p = 4, type = "const")
Bcoef(model)
summary(model)
model_summary <- summary(model)
irf(model)
plot(irf(model))
plot(irf(model))
summary(model)
acf(resid(fit), 52)
acf(resid(model), 12)
acf(resid(model), 48)
acf(resid(model), 48)
X <- housing_data[, -1])
X <- housing_data[, -1]
model <- VAR(y = X, p = 4, type = "const")
summary(model)
acf(resid(model), 48)
acf(resid(model), 48)
# set up environment
rm(list = ls())
library(quantmod)
library(ggplot2)
library(reshape2)
library(vars)
theme_set(theme_bw(base_size = 18))
# pull data from FRED
getSymbols(c('HOUST', 'COMPUTSA'), src='FRED')
houscomp <- data.frame(date = as.Date(index(COMPUTSA)), houst = COMPUTSA)
# format/plot data
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
housing_data <- merge(houst, houscomp, by = "date")
data_long <- melt(housing_data, id.vars = "date")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("") + ylab("Units in thousands")
# run VAR
X <- housing_data[, -1]
model <- VAR(y = X, p = 4, type = "const")
summary(model)
# examine residuals
acf(resid(model), 48)
serial.test(model, lags.pt=12, type = "PR.adjusted")
serial.test(model, lags.pt=12, type = "PT.adjusted")
spectrum(X, ..., method = c("pgram", "ar"))
spectrum(X,  method = c("pgram", "ar"))
fit.pr <- predict(model, n.ahead = 12, ci = 0.95)
fanchart(fit.pr)
fit.pr <- predict(model, n.ahead = 48, ci = 0.95)
fanchart(fit.pr)
fit.pr <- predict(model, n.ahead = 96, ci = 0.95)
fanchart(fit.pr)
12
fit.pr <- predict(model, n.ahead = 12, ci = 0.95)
fanchart(fit.pr)
X <- housing_data[, -1]
nobs <- nrow(housing_data)
data_long <- melt(housing_data, id.vars = "date")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("") + ylab("Units in thousands")
training_data <- housing_data[1:(nrow(housing_data)-1)]
training_data <- housing_data[1:(nobs-1)]
nobs <- nrow(housing_data)
training_data <- housing_data[1:(nobs-12)]
training_data <- housing_data[1:(nobs-12),]
training_data <- housing_data[1:(nobs-12), ]
rm(list = ls())
library(quantmod)
library(ggplot2)
library(reshape2)
library(vars)
theme_set(theme_bw(base_size = 18))
getSymbols(c('HOUST', 'COMPUTSA'), src='FRED')
houscomp <- data.frame(date = as.Date(index(COMPUTSA)), houst = COMPUTSA)
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
housing_data <- merge(houst, houscomp, by = "date")
nobs <- nrow(housing_data)
data_long <- melt(housing_data, id.vars = "date")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("") + ylab("Units in thousands")
training_data <- housing_data[1:(nobs-12), ]
X <- housing_data[, -1]
model <- VAR(y = X, p = 4, type = "const")
summary(model)
acf(resid(model), 48)
serial.test(model, lags.pt=12, type = "PT.adjusted")
spectrum(X,  method = c("pgram", "ar"))
fit.pr <- predict(model, n.ahead = 12, ci = 0.95)
fanchart(fit.pr)
# set up environment
rm(list = ls())
library(quantmod)
library(ggplot2)
library(reshape2)
library(vars)
theme_set(theme_bw(base_size = 18))
# pull data from FRED
getSymbols(c('HOUST', 'COMPUTSA'), src='FRED')
houscomp <- data.frame(date = as.Date(index(COMPUTSA)), houst = COMPUTSA)
# format/plot data
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
housing_data <- merge(houst, houscomp, by = "date")
nobs <- nrow(housing_data)
data_long <- melt(housing_data, id.vars = "date")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("") + ylab("Units in thousands")
# drop last 12 observations to be the out of sample forecast comparisons
training_data <- housing_data[1:(nobs-12), ]
# run VAR
X <- training_data[, -1]
model <- VAR(y = X, p = 4, type = "const")
summary(model)
# examine residuals
acf(resid(model), 48)
serial.test(model, lags.pt=12, type = "PT.adjusted")
spectrum(X,  method = c("pgram", "ar"))
# make prediction
fit.pr <- predict(model, n.ahead = 12, ci = 0.95)
fanchart(fit.pr)
rm(list = ls())
library(quantmod)
library(ggplot2)
library(reshape2)
library(vars)
theme_set(theme_bw(base_size = 18))
getSymbols(c('HOUST', 'COMPUTSA'), src='FRED')
houscomp <- data.frame(date = as.Date(index(COMPUTSA)), houst = COMPUTSA)
houst <- data.frame(date = as.Date(index(HOUST)), houst = HOUST)
housing_data <- merge(houst, houscomp, by = "date")
nobs <- nrow(housing_data)
data_long <- melt(housing_data, id.vars = "date")
ggplot(data_long, aes(x = date, y = value, colour = variable)) +
geom_line(size = 1.25) +  xlab("") + ylab("Units in thousands")
training_data <- housing_data[1:(nobs-12), ]
X <- training_data[, -1]
model <- VAR(y = X, p = 4, type = "const")
summary(model)
acf(resid(model), 48)
serial.test(model, lags.pt=12, type = "PT.adjusted")
spectrum(X,  method = c("pgram", "ar"))
fit.pr <- predict(model, n.ahead = 12, ci = 0.95)
fanchart(fit.pr)
x_t <- X[[1]]
x_t
i <- z <- complex(real = 0, imaginary = 1)
i
x <- X[[1]]
i <- z <- complex(real = 0, imaginary = 1)
t<- 45
x[t]
get_spec_density <- function(x, w){
Sw <- 0
for(t in 1:length(x)){
Sw <- Sw + exp(-i * w * t) * x[t]
}
}
pi
spec_density <- get_spec_density(x, pi/2)
spec_density
get_spec_density <- function(x, w){
Sw <- 0
for(t in 1:length(x)){
Sw <- Sw + exp(-i * w * t) * x[t]
}
}
spec_density <- get_spec_density(x, pi/2)
spec_density
t <- 6
Sw
exp(-i * w * t)
w = pi/4
exp(-i * w * t)
exp(-i * w * t) * x[t]
length(x)
get_spec_density <- function(x, w){
Sw <- 0
for(t in 1:length(x)){
Sw <- Sw + exp(-i * w * t) * x[t]
}
return(Sw)
}
spec_density <- get_spec_density(x, pi/2)
spec_density
range <- seq(0, 2*pi, by = 0.1)
range
spec_density <- get_spec_density(x, range)
spec_density
plot(range, spec_density)
range <- seq(0.1, 2*pi, by = 0.1)
spec_density <- get_spec_density(x, range)
plot(range, spec_density)
plot(range, spec_density, type = "l")
sqrt(as.complex(-1))
sqrt(-1)
as.complex(-1)
sqrt(as.complex(-1))
tab <- matrix(data = 4, nrow = 4, ncol = 3)
tab
tab <- matrix(data = NA, nrow = 4, ncol = 3)
tba
tab
colnames(tab) <- c("outcomes", "i = low", "i = high")
stargazer(tab)
stargazer::stargazer(tab)
setwd("~/OneDrive - PennO365/Classes/2019_Spring/FNCE-921 (Empirical Methods in Finance)/Problem Sets/problem_set_2/code")
cdata <- read.csv("../data/consumption_data.csv")
bea_cg <- cdata$Annual_Growth
plot(bea_cg, type = "l")
abline(h = mean(bea_cg))
mean(bea_cg)
abline(h = mean(bea_cg, na.rm = T))
bea_cg <- na.omit(cdata$Annual_Growth)
plot(bea_cg, type = "l")
abline(h = mean(bea_cg, na.rm = T))
mu_F <- mean(bea_cg)
sigma_F <- sd(bea_cg)
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
mu_F
sigma_F
rho_F
nobs <- length(bea_cg)
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
rho_F
sigma_F
sd(bea_cg)
mu_F
sigma_F <- sd(1+bea_cg)
sigma_F
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
rho_F
cdata <- read.csv("../data/consumption_data.csv")
bea_cg <- na.omit(cdata$AG_EOY)
bea_cg
nobs <- length(bea_cg)
plot(bea_cg, type = "l")
abline(h = mean(bea_cg, na.rm = T))
mu_F <- mean(bea_cg)
mu_F
sigma_F <- sd(bea_cg)
sigma_F
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
rho_F
dates <- as.Date(cdata$observation_date)
dates
cdata <- read.csv("../data/consumption_data.csv")
cdata <- read.csv("../data/consumption_data.csv", stringsAsFactors = F)
dates <- as.Date(cdata$observation_date, format = "%m/%d/%Y")
dates
bea_cg <- na.omit(cdata$AG_EOY)
bea_cg
nobs <- length(bea_cg)
plot(bea_cg, type = "l")
abline(h = mean(bea_cg, na.rm = T))
mu_F <- mean(bea_cg)
sigma_F <- sd(bea_cg)
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
mu_F
sigma_F
rho_F
PW_ind <- which(dates > as.Date("1950-01-01"))
PW_ind
PW_cg <- bea_cg[(PW_ind-1)]
nobs_PW <- length(PW_cg)
mu_PW <- mean(PW_cg)
mu_PW
PW_cg
PW_ind
bea_cg
abline(h = mean(bea_cg))
plot(bea_cg, type = "l")
abline(h = mean(bea_cg))
mu_F <- mean(bea_cg)
sigma_F <- sd(bea_cg)
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
PW_ind <- which(dates > as.Date("1950-01-01"))
bea_cg
bea_cg <- as.numeric(na.omit(cdata$AG_EOY))
bea_cg
nobs <- length(bea_cg)
plot(bea_cg, type = "l")
abline(h = mean(bea_cg))
mu_F <- mean(bea_cg)
sigma_F <- sd(bea_cg)
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
PW_ind <- which(dates > as.Date("1950-01-01"))
PW_ind
PW_cg <- bea_cg[(PW_ind-1)]
PW_cg
PW_ind
PW_cg <- as.numeric(na.omit(cdata$AG_EOY[PW_ind]))
PW_cg
nobs_PW <- length(PW_cg)
mu_PW <- mean(PW_cg)
mu_PW
sigma_PW <- sd(PW_cg)
sigma_PW
rho_PW <- cor(bea_cg[2:nobs_PW], bea_cg[1:(nobs_PW-1)])
rho_PW
get_beta(rho = rho_MP, mu = mu_MP, sigma = sigma_MP, alpha = -2)
rm(list = ls())
library(reshape2)
library(ggplot2)
rm(list = ls())
library(reshape2)
library(ggplot2)
library(quantmod)
source("functions.R")
theme_set(theme_bw(base_size = 20))
getSymbols(c("DDURRA3A086NBEA", "DSERRA3A086NBEA"), src='FRED')
dates <- index(DDURRA3A086NBEA)
consumption <- as.numeric(DDURRA3A086NBEA + DSERRA3A086NBEA)
nobs <- length(consumption)
cdata <- read.csv("../data/consumption_data.csv", stringsAsFactors = F)
dates <- as.Date(cdata$observation_date, format = "%m/%d/%Y")
bea_cg <- as.numeric(na.omit(cdata$AG_EOY)) # year over year growth, at the end of year
nobs <- length(bea_cg)
plot(bea_cg, type = "l")
abline(h = mean(bea_cg))
mu_F <- mean(bea_cg)
sigma_F <- sd(bea_cg)
rho_F <- cor(bea_cg[2:(nobs-1)], bea_cg[1:(nobs-2)])
PW_ind <- which(dates > as.Date("1950-01-01"))
PW_cg <- as.numeric(na.omit(cdata$AG_EOY[PW_ind]))
nobs_PW <- length(PW_cg)
mu_PW <- mean(PW_cg)
sigma_PW <- sd(PW_cg)
rho_PW <- cor(bea_cg[2:nobs_PW], bea_cg[1:(nobs_PW-1)])
MP_data <- read.table("../data/MP_original_data.txt", header = T)
nobs_MP <- nrow(MP_data)
MP_data$C_growth <- c(NA, diff(log(MP_data$C)))
MP_data$C_growth <- c(NA, MP_data$C[2:nobs_MP]/MP_data$C[1:(nobs_MP-1)])
mu_MP <- mean(MP_data$C_growth, na.rm = T)
sigma_MP <- sd(MP_data$C_growth, na.rm = T)
rho_MP <- -0.14
phi <- (1+rho_MP)/2
get_beta(rho = rho_MP, mu = mu_MP, sigma = sigma_MP, alpha = -2)
get_beta(rho = rho_F, mu = 1 + mu_F, sigma = sigma_F, alpha = -2)
get_beta(rho = rho_PW, mu = 1 + mu_PW, sigma = sigma_PW, alpha = -2)
sample_a <- cons_growth_data$total
sample_a <- cons_growth_data$total
mu_F
mu_MP
beta_F <- get_beta(rho = rho_F, mu = 1+mu_F, sigma = sigma_F, alpha = -2, target_R = 1.05 )
beta_PW <- get_beta(rho = rho_PW, mu = 1+mu_PW, sigma = sigma_PW, alpha = -2, target_R = 1.05 )
beta_F
beta_PW
beta_MP <- get_beta(rho = rho_MP, mu = mu_MP, sigma = sigma_MP, alpha = -2, target_R = 1.05 )
beta_F <- get_beta(rho = rho_F, mu = 1+mu_F, sigma = sigma_F, alpha = -2, target_R = 1.05 )
beta_PW <- get_beta(rho = rho_PW, mu = 1+mu_PW, sigma = sigma_PW, alpha = -2, target_R = 1.05 )
MP_stats <- round(c(mu_MP, sigma_MP, rho_MP, beta_MP), 3)
F_stats  <- round(c(mu_F, sigma_F, rho_F, beta_F), 3)
PW_stats <- round(c(mu_PW, sigma_PW, rho_PW, beta_PW), 3)
stats <- rbind(MP_stats, F_stats, PW_stats)
colnames(stats) <- c("mean", "sigma", "rho", "implied beta")
stargazer::stargazer(stats)
mu_F
sigma_F
rho_F
get_beta(rho = rho_F, mu = 1 + mu_F, sigma = sigma_F, alpha = -2)
get_beta(rho = rho_PW, mu = 1 + mu_PW, sigma = sigma_PW, alpha = -2)
PW_ind <- which(dates > as.Date("1950-01-01"))
PW_cg <- as.numeric(na.omit(cdata$AG_EOY[PW_ind]))
nobs_PW <- length(PW_cg)
PW_cg
mu_PW <- mean(PW_cg)
sigma_PW <- sd(PW_cg)
rho_PW <- cor(bea_cg[2:nobs_PW], bea_cg[1:(nobs_PW-1)])
mu_PW
sigma_PW
mu_PW
get_beta(rho = rho_MP, mu = mu_MP, sigma = sigma_MP, alpha = -2)
get_beta(rho = rho_F, mu = 1 + mu_F, sigma = sigma_F, alpha = -2)
get_beta(rho = rho_PW, mu = 1 + mu_PW, sigma = sigma_PW, alpha = -2)
sigma_PW
rho_PW
sigma_F
rho_F
